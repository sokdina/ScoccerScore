package cz.fi.muni.pa165.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import javax.inject.Inject;

import java.util.List;

import cz.fi.muni.pa165.dao.ITeamDao;
import cz.fi.muni.pa165.entity.Team;

/**
 * 
 * @author sokdina999@gamil.com
**/

@Service
public class TeamServiceImpl implements TeamService {
	
        @Inject
	private ITeamDao teaDao;
    
	@Override
	@Transactional
	public void create(Team p) {
            entityManager.persist(p);
        }
        
        @Override
        @Transactional
	public Team update(Team t) {
		return entityManager.merge(t);
	}
        
        @Override
        @Transactional
	public void delete(Team t){// throws IllegalArgumentException {
		
		entityManager.remove(findById(t.getId()));
	}

	@Override
	public Team findById(Long id) {
	    return entityManager.find(Team.class, id);
        }

	@Override
        public List<Team> findByAll() {
		return entityManager.createQuery("select t from Team t", Team.class)
				.getResultList();
	}
       
       @Override
	public List<Team> findByName(String name) {
		return entityManager.createQuery("SELECT t FROM Team t WHERE t.name like :name ",
				Team.class).setParameter("name", "%"+name+"%").getResultList();
	}

}

@Service
public class CategoryServiceImpl implements CategoryService {
	@Inject
	private CategoryDao categoryDao;

	@Override
	public Category findById(Long id) {
		return categoryDao.findById(id);
	}

	@Override
	public List<Category> findAll() {
		return categoryDao.findAll();
	}

	@Override
	public void create(Category category) {
		categoryDao.create(category);
	}

	@Override
	public void remove(Category c) {
		categoryDao.delete(c);
	}

	@Override
	public Category findByName(String categoryName) {
		return categoryDao.findByName(categoryName);
	}


}
