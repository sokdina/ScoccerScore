<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="15" passed="15">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="6758" started-at="2016-10-29T17:00:20Z" finished-at="2016-10-29T17:00:27Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="6758" started-at="2016-10-29T17:00:20Z" finished-at="2016-10-29T17:00:27Z">
      <class name="cz.fi.muni.pa165.dao.TeamDaoTest">
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:cz.fi.muni.pa165.dao.TeamDaoTest@2db7a79b]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="7" started-at="2016-10-29T19:00:27Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2016-10-29T19:00:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:cz.fi.muni.pa165.dao.TeamDaoTest@2db7a79b]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2016-10-29T19:00:27Z" finished-at="2016-10-29T19:00:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.fi.muni.pa165.dao.TeamDaoTest@2db7a79b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="5" started-at="2016-10-29T19:00:27Z" finished-at="2016-10-29T19:00:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cz.fi.muni.pa165.dao.TeamDaoTest.create()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="createTests()[pri:0, instance:cz.fi.muni.pa165.dao.TeamDaoTest@2db7a79b]" name="createTests" is-config="true" duration-ms="2" started-at="2016-10-29T19:00:27Z" finished-at="2016-10-29T19:00:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTests -->
        <test-method status="PASS" signature="create()[pri:0, instance:cz.fi.muni.pa165.dao.TeamDaoTest@2db7a79b]" name="create" duration-ms="2" started-at="2016-10-29T19:00:27Z" finished-at="2016-10-29T19:00:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- create -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.fi.muni.pa165.dao.TeamDaoTest@2db7a79b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="4" started-at="2016-10-29T19:00:27Z" finished-at="2016-10-29T19:00:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cz.fi.muni.pa165.dao.TeamDaoTest.create()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.fi.muni.pa165.dao.TeamDaoTest@2db7a79b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="4" started-at="2016-10-29T19:00:27Z" finished-at="2016-10-29T19:00:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cz.fi.muni.pa165.dao.TeamDaoTest.delete()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="createTests()[pri:0, instance:cz.fi.muni.pa165.dao.TeamDaoTest@2db7a79b]" name="createTests" is-config="true" duration-ms="3" started-at="2016-10-29T19:00:27Z" finished-at="2016-10-29T19:00:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTests -->
        <test-method status="PASS" signature="delete()[pri:0, instance:cz.fi.muni.pa165.dao.TeamDaoTest@2db7a79b]" name="delete" duration-ms="1" started-at="2016-10-29T19:00:27Z" finished-at="2016-10-29T19:00:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.fi.muni.pa165.dao.TeamDaoTest@2db7a79b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="4" started-at="2016-10-29T19:00:27Z" finished-at="2016-10-29T19:00:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cz.fi.muni.pa165.dao.TeamDaoTest.delete()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.fi.muni.pa165.dao.TeamDaoTest@2db7a79b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="4" started-at="2016-10-29T19:00:27Z" finished-at="2016-10-29T19:00:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cz.fi.muni.pa165.dao.TeamDaoTest.findAll()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="createTests()[pri:0, instance:cz.fi.muni.pa165.dao.TeamDaoTest@2db7a79b]" name="createTests" is-config="true" duration-ms="3" started-at="2016-10-29T19:00:27Z" finished-at="2016-10-29T19:00:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTests -->
        <test-method status="PASS" signature="findAll()[pri:0, instance:cz.fi.muni.pa165.dao.TeamDaoTest@2db7a79b]" name="findAll" duration-ms="39" started-at="2016-10-29T19:00:27Z" finished-at="2016-10-29T19:00:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findAll -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.fi.muni.pa165.dao.TeamDaoTest@2db7a79b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="5" started-at="2016-10-29T19:00:27Z" finished-at="2016-10-29T19:00:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cz.fi.muni.pa165.dao.TeamDaoTest.findAll()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.fi.muni.pa165.dao.TeamDaoTest@2db7a79b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="3" started-at="2016-10-29T19:00:27Z" finished-at="2016-10-29T19:00:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cz.fi.muni.pa165.dao.TeamDaoTest.findById()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="createTests()[pri:0, instance:cz.fi.muni.pa165.dao.TeamDaoTest@2db7a79b]" name="createTests" is-config="true" duration-ms="11" started-at="2016-10-29T19:00:27Z" finished-at="2016-10-29T19:00:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTests -->
        <test-method status="PASS" signature="findById()[pri:0, instance:cz.fi.muni.pa165.dao.TeamDaoTest@2db7a79b]" name="findById" duration-ms="1" started-at="2016-10-29T19:00:27Z" finished-at="2016-10-29T19:00:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findById -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.fi.muni.pa165.dao.TeamDaoTest@2db7a79b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="5" started-at="2016-10-29T19:00:27Z" finished-at="2016-10-29T19:00:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cz.fi.muni.pa165.dao.TeamDaoTest.findById()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.fi.muni.pa165.dao.TeamDaoTest@2db7a79b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="5" started-at="2016-10-29T19:00:27Z" finished-at="2016-10-29T19:00:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cz.fi.muni.pa165.dao.TeamDaoTest.findByName()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="createTests()[pri:0, instance:cz.fi.muni.pa165.dao.TeamDaoTest@2db7a79b]" name="createTests" is-config="true" duration-ms="4" started-at="2016-10-29T19:00:27Z" finished-at="2016-10-29T19:00:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTests -->
        <test-method status="PASS" signature="findByName()[pri:0, instance:cz.fi.muni.pa165.dao.TeamDaoTest@2db7a79b]" name="findByName" duration-ms="58" started-at="2016-10-29T19:00:27Z" finished-at="2016-10-29T19:00:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findByName -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.fi.muni.pa165.dao.TeamDaoTest@2db7a79b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="8" started-at="2016-10-29T19:00:27Z" finished-at="2016-10-29T19:00:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cz.fi.muni.pa165.dao.TeamDaoTest.findByName()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.fi.muni.pa165.dao.TeamDaoTest@2db7a79b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="5" started-at="2016-10-29T19:00:27Z" finished-at="2016-10-29T19:00:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cz.fi.muni.pa165.dao.TeamDaoTest.update()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="createTests()[pri:0, instance:cz.fi.muni.pa165.dao.TeamDaoTest@2db7a79b]" name="createTests" is-config="true" duration-ms="3" started-at="2016-10-29T19:00:27Z" finished-at="2016-10-29T19:00:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTests -->
        <test-method status="PASS" signature="update()[pri:0, instance:cz.fi.muni.pa165.dao.TeamDaoTest@2db7a79b]" name="update" duration-ms="2" started-at="2016-10-29T19:00:27Z" finished-at="2016-10-29T19:00:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- update -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.fi.muni.pa165.dao.TeamDaoTest@2db7a79b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="3" started-at="2016-10-29T19:00:27Z" finished-at="2016-10-29T19:00:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cz.fi.muni.pa165.dao.TeamDaoTest.update()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:cz.fi.muni.pa165.dao.TeamDaoTest@2db7a79b]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2016-10-29T19:00:27Z" finished-at="2016-10-29T19:00:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- cz.fi.muni.pa165.dao.TeamDaoTest -->
      <class name="cz.fi.muni.pa165.dao.GoalDaoTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:cz.fi.muni.pa165.dao.GoalDaoTest@4671e53b]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="10" started-at="2016-10-29T19:00:20Z" finished-at="2016-10-29T19:00:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:cz.fi.muni.pa165.dao.GoalDaoTest@4671e53b]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="5826" started-at="2016-10-29T19:00:20Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2016-10-29T19:00:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.fi.muni.pa165.dao.GoalDaoTest@4671e53b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="151" started-at="2016-10-29T19:00:26Z" finished-at="2016-10-29T19:00:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cz.fi.muni.pa165.dao.GoalDaoTest.createAndFintById()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="initialization()[pri:0, instance:cz.fi.muni.pa165.dao.GoalDaoTest@4671e53b]" name="initialization" is-config="true" duration-ms="60" started-at="2016-10-29T19:00:26Z" finished-at="2016-10-29T19:00:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method status="PASS" signature="createAndFintById()[pri:0, instance:cz.fi.muni.pa165.dao.GoalDaoTest@4671e53b]" name="createAndFintById" duration-ms="13" started-at="2016-10-29T19:00:26Z" finished-at="2016-10-29T19:00:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAndFintById -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.fi.muni.pa165.dao.GoalDaoTest@4671e53b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="9" started-at="2016-10-29T19:00:26Z" finished-at="2016-10-29T19:00:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cz.fi.muni.pa165.dao.GoalDaoTest.createAndFintById()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.fi.muni.pa165.dao.GoalDaoTest@4671e53b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="3" started-at="2016-10-29T19:00:26Z" finished-at="2016-10-29T19:00:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cz.fi.muni.pa165.dao.GoalDaoTest.createWithNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="initialization()[pri:0, instance:cz.fi.muni.pa165.dao.GoalDaoTest@4671e53b]" name="initialization" is-config="true" duration-ms="1" started-at="2016-10-29T19:00:26Z" finished-at="2016-10-29T19:00:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method status="PASS" signature="createWithNull()[pri:0, instance:cz.fi.muni.pa165.dao.GoalDaoTest@4671e53b]" name="createWithNull" duration-ms="6" started-at="2016-10-29T19:00:26Z" finished-at="2016-10-29T19:00:26Z">
          <exception class="org.springframework.dao.InvalidDataAccessApiUsageException">
            <message>
              <![CDATA[input parameter is null; nested exception is java.lang.IllegalArgumentException: input parameter is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.dao.InvalidDataAccessApiUsageException: input parameter is null; nested exception is java.lang.IllegalArgumentException: input parameter is null
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:384)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:492)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:59)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:213)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:147)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy47.create(Unknown Source)
	at cz.fi.muni.pa165.dao.GoalDaoTest.createWithNull(GoalDaoTest.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:196)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:171)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:208)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:635)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:70)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:158)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:98)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
Caused by: java.lang.IllegalArgumentException: input parameter is null
	at cz.fi.muni.pa165.dao.GoalDao.validateNotNull(GoalDao.java:78)
	at cz.fi.muni.pa165.dao.GoalDao.create(GoalDao.java:27)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:136)
	... 45 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.dao.InvalidDataAccessApiUsageException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createWithNull -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.fi.muni.pa165.dao.GoalDaoTest@4671e53b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="6" started-at="2016-10-29T19:00:26Z" finished-at="2016-10-29T19:00:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cz.fi.muni.pa165.dao.GoalDaoTest.createWithNull()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.fi.muni.pa165.dao.GoalDaoTest@4671e53b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="13" started-at="2016-10-29T19:00:26Z" finished-at="2016-10-29T19:00:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cz.fi.muni.pa165.dao.GoalDaoTest.deleteGame()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="initialization()[pri:0, instance:cz.fi.muni.pa165.dao.GoalDaoTest@4671e53b]" name="initialization" is-config="true" duration-ms="2" started-at="2016-10-29T19:00:26Z" finished-at="2016-10-29T19:00:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method status="PASS" signature="deleteGame()[pri:0, instance:cz.fi.muni.pa165.dao.GoalDaoTest@4671e53b]" name="deleteGame" duration-ms="7" started-at="2016-10-29T19:00:26Z" finished-at="2016-10-29T19:00:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteGame -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.fi.muni.pa165.dao.GoalDaoTest@4671e53b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="10" started-at="2016-10-29T19:00:26Z" finished-at="2016-10-29T19:00:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cz.fi.muni.pa165.dao.GoalDaoTest.deleteGame()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.fi.muni.pa165.dao.GoalDaoTest@4671e53b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="8" started-at="2016-10-29T19:00:26Z" finished-at="2016-10-29T19:00:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cz.fi.muni.pa165.dao.GoalDaoTest.findAll()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="initialization()[pri:0, instance:cz.fi.muni.pa165.dao.GoalDaoTest@4671e53b]" name="initialization" is-config="true" duration-ms="2" started-at="2016-10-29T19:00:26Z" finished-at="2016-10-29T19:00:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method status="PASS" signature="findAll()[pri:0, instance:cz.fi.muni.pa165.dao.GoalDaoTest@4671e53b]" name="findAll" duration-ms="224" started-at="2016-10-29T19:00:26Z" finished-at="2016-10-29T19:00:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findAll -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.fi.muni.pa165.dao.GoalDaoTest@4671e53b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="18" started-at="2016-10-29T19:00:26Z" finished-at="2016-10-29T19:00:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cz.fi.muni.pa165.dao.GoalDaoTest.findAll()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.fi.muni.pa165.dao.GoalDaoTest@4671e53b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="7" started-at="2016-10-29T19:00:26Z" finished-at="2016-10-29T19:00:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cz.fi.muni.pa165.dao.GoalDaoTest.findById()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="initialization()[pri:0, instance:cz.fi.muni.pa165.dao.GoalDaoTest@4671e53b]" name="initialization" is-config="true" duration-ms="2" started-at="2016-10-29T19:00:26Z" finished-at="2016-10-29T19:00:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method status="PASS" signature="findById()[pri:0, instance:cz.fi.muni.pa165.dao.GoalDaoTest@4671e53b]" name="findById" duration-ms="3" started-at="2016-10-29T19:00:26Z" finished-at="2016-10-29T19:00:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findById -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.fi.muni.pa165.dao.GoalDaoTest@4671e53b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="6" started-at="2016-10-29T19:00:26Z" finished-at="2016-10-29T19:00:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cz.fi.muni.pa165.dao.GoalDaoTest.findById()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.fi.muni.pa165.dao.GoalDaoTest@4671e53b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="3" started-at="2016-10-29T19:00:26Z" finished-at="2016-10-29T19:00:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cz.fi.muni.pa165.dao.GoalDaoTest.findByPlayer()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="initialization()[pri:0, instance:cz.fi.muni.pa165.dao.GoalDaoTest@4671e53b]" name="initialization" is-config="true" duration-ms="5" started-at="2016-10-29T19:00:26Z" finished-at="2016-10-29T19:00:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method status="PASS" signature="findByPlayer()[pri:0, instance:cz.fi.muni.pa165.dao.GoalDaoTest@4671e53b]" name="findByPlayer" duration-ms="103" started-at="2016-10-29T19:00:26Z" finished-at="2016-10-29T19:00:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findByPlayer -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.fi.muni.pa165.dao.GoalDaoTest@4671e53b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="9" started-at="2016-10-29T19:00:27Z" finished-at="2016-10-29T19:00:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cz.fi.muni.pa165.dao.GoalDaoTest.findByPlayer()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.fi.muni.pa165.dao.GoalDaoTest@4671e53b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="3" started-at="2016-10-29T19:00:27Z" finished-at="2016-10-29T19:00:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cz.fi.muni.pa165.dao.GoalDaoTest.testWithGame()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="initialization()[pri:0, instance:cz.fi.muni.pa165.dao.GoalDaoTest@4671e53b]" name="initialization" is-config="true" duration-ms="1" started-at="2016-10-29T19:00:27Z" finished-at="2016-10-29T19:00:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method status="PASS" signature="testWithGame()[pri:0, instance:cz.fi.muni.pa165.dao.GoalDaoTest@4671e53b]" name="testWithGame" duration-ms="1" started-at="2016-10-29T19:00:27Z" finished-at="2016-10-29T19:00:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithGame -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.fi.muni.pa165.dao.GoalDaoTest@4671e53b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="4" started-at="2016-10-29T19:00:27Z" finished-at="2016-10-29T19:00:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cz.fi.muni.pa165.dao.GoalDaoTest.testWithGame()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.fi.muni.pa165.dao.GoalDaoTest@4671e53b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="3" started-at="2016-10-29T19:00:27Z" finished-at="2016-10-29T19:00:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cz.fi.muni.pa165.dao.GoalDaoTest.testWithPlayer()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="initialization()[pri:0, instance:cz.fi.muni.pa165.dao.GoalDaoTest@4671e53b]" name="initialization" is-config="true" duration-ms="2" started-at="2016-10-29T19:00:27Z" finished-at="2016-10-29T19:00:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method status="PASS" signature="testWithPlayer()[pri:0, instance:cz.fi.muni.pa165.dao.GoalDaoTest@4671e53b]" name="testWithPlayer" duration-ms="0" started-at="2016-10-29T19:00:27Z" finished-at="2016-10-29T19:00:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithPlayer -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.fi.muni.pa165.dao.GoalDaoTest@4671e53b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="4" started-at="2016-10-29T19:00:27Z" finished-at="2016-10-29T19:00:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cz.fi.muni.pa165.dao.GoalDaoTest.testWithPlayer()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.fi.muni.pa165.dao.GoalDaoTest@4671e53b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="6" started-at="2016-10-29T19:00:27Z" finished-at="2016-10-29T19:00:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cz.fi.muni.pa165.dao.GoalDaoTest.updateGoal()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="initialization()[pri:0, instance:cz.fi.muni.pa165.dao.GoalDaoTest@4671e53b]" name="initialization" is-config="true" duration-ms="4" started-at="2016-10-29T19:00:27Z" finished-at="2016-10-29T19:00:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method status="PASS" signature="updateGoal()[pri:0, instance:cz.fi.muni.pa165.dao.GoalDaoTest@4671e53b]" name="updateGoal" duration-ms="1" started-at="2016-10-29T19:00:27Z" finished-at="2016-10-29T19:00:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateGoal -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.fi.muni.pa165.dao.GoalDaoTest@4671e53b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="5" started-at="2016-10-29T19:00:27Z" finished-at="2016-10-29T19:00:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cz.fi.muni.pa165.dao.GoalDaoTest.updateGoal()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:cz.fi.muni.pa165.dao.GoalDaoTest@4671e53b]" name="springTestContextAfterTestClass" is-config="true" duration-ms="1" started-at="2016-10-29T19:00:27Z" finished-at="2016-10-29T19:00:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- cz.fi.muni.pa165.dao.GoalDaoTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
